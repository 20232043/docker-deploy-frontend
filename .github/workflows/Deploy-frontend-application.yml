name: Deploy frontend application

on:
  push:
    branches: [ main, new-feature ]

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          tags: |
            ${{ secrets.DOCKER_HUB_USERNAME }}/234-deploylab-frontend:latest
            ${{ secrets.DOCKER_HUB_USERNAME }}/234-deploylab-frontend:${{ github.sha }}

      - name: Copy compose files to server
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.HOST_SERVER }}
          username: ${{ secrets.HOST_USER_NAME }}
          key: ${{ secrets.HOST_SSH_PRIVATE_KEY }}
          port: 22
          source: "docker-compose*.yml"
          target: "/home/ubuntu/frontend"

      - name: Deploy based on branch
        uses: appleboy/ssh-action@v1.2.1
        with:
          host: ${{ secrets.HOST_SERVER }}
          username: ${{ secrets.HOST_USER_NAME }}
          key: ${{ secrets.HOST_SSH_PRIVATE_KEY }}
          port: 22
          script: |
            cd /home/ubuntu/frontend
            echo ${{ secrets.DOCKER_HUB_TOKEN }} | docker login --username ${{ secrets.DOCKER_HUB_USERNAME }} --password-stdin

            if [ "${{ github.ref }}" == "refs/heads/main" ]; then
              docker compose -f docker-compose.yml down || true
              docker compose -f docker-compose.yml pull
              docker compose -f docker-compose.yml up -d
            fi

            if [ "${{ github.ref }}" == "refs/heads/new-feature" ]; then
              docker compose -f docker-compose-prod.yml down || true
              docker compose -f docker-compose-prod.yml pull
              docker compose -f docker-compose-prod.yml up -d
            fi

            docker system prune -f
            rm -rf /home/ubuntu/frontend
